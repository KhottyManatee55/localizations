//ru_ru
{
	"name": "Собственные улучшения",
	"icon": "minecraft:potato",
	"category": "thermal:modpack",
	"read_by_default": true,
	"pages": [
		{
			"type": "text",
			"text": "Система улучшений была сделана с упором на модульность, кастомизацию и гибкость. Улучшения основываются на NBT-данные, это значит, что Вы можете назначить любой модификатор и значение, просто меняя NBT-данные предмета. Другими словами, нет ничего особенного в улучшениях самого мода Thermal, любой предмет с правильно настроеными NBT-данными может быть улучшением, даже картошка."
		},
		{
			"type": "text",
			"text": "Улучшение включает в себя тип и модификатор. Хоть тип (механизм, генератор, зелье и т.д.) ни на что не влияет (на момент написания), в будущем будет иметь роль проверяющего. Модификатор применяется к предмету по принципу 'attribute-value', где 'attribute' - тип модификатора, а 'value' - его значение. Все значения плавающие, даже если тип модификатора требует цельное число (зелье силы, например)."
		},
		{
			"type": "link",
			"url": "https://github.com/KingLemming/1.16/blob/master/CoFHCore/src/main/java/cofh/core/util/constants/NBTTags.java#L85",
			"link_text": "Github Link",
			"text": "Общая форма NBT-данных следуящая: $(br2){AugmentData:$(br){Type:'[augment type]',$(br)[modifier 1]:[float value]f, $(br)[modifier 2]:[float value]f, $(br)[...]}}$(br2)Полный список всех типов улучшений можно найти на странице Github King Lemming; ссылка ниже. "
		},
		{
			"type": "text",
			"text": "Итак, для примера, команда, которая сделает Вам улучшение, которое меняет потребление энергии на 0 (делает её креативной, по сути), следующая (нажмите, чтобы выполнить): $(br)$(c:/summon minecraft:item ~ ~ ~ {Item:{id:'minecraft:sea_pickle',Count:1b,tag:{AugmentData:{Type:'MchAug',MchEn:0.0f}}}})/give $(playername) minecraft:sea_pickle{AugmentData:{Type:'MchAug',MchEn:0.0f}} 1$(/c)$(br2)Если имеются несколько пар 'тип модификатора - значение', у последней пары будет высший приоритет."
		},
		{
			"type": "text",
			"title": "По поводу накладывания эффекта",
			"text": "Некоторые улучшения не накладывают свой эффект. Таким образом, если в одном инструменте/блоке установлены улучшения одного и того же типа модификатора, то будет использоваться только высшее значение данного типа. Значения этих модификаторов написаны $(l)жирным$() шрифтом. Эффект накладывания приссущ типу модификатора. Например, эффект от RFMax не будет накладываться, в то время как AERad будет, вне зависимости от значения модификатора."
		},
		{
			"type": "text",
			"title": "По поводу плавающих значений",
			"text": "Как уже было упомянуто выше, все значения плавающие. Это генерирует несколько интересных моментов с типами модификаторов, которые требуют цельные значения. В таких моментах, улучшение покажет значение модификатора как плавающее, округлённое до цельного. Тем не менее, поведение блока/инструмента может быть разным, в зависимости от типа модификатора/значения."
		}
	]
}
